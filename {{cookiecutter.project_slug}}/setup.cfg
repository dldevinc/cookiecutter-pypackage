{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}

[metadata]
name = {{ cookiecutter.project_slug }}
version = {{ cookiecutter.version }}
description = {{ cookiecutter.project_short_description }}
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
license = {{ cookiecutter.open_source_license }}
author = {{ cookiecutter.full_name }}
author_email = {{ cookiecutter.email }}
maintainer = {{ cookiecutter.full_name }}
maintainer_email = {{ cookiecutter.email }}
platforms = OS Independent
classifiers =
  Development Status :: 3 - Alpha
  Intended Audience :: Developers
{%- if cookiecutter.open_source_license in license_classifiers %}
  {{ license_classifiers[cookiecutter.open_source_license] }}
{%- endif %}
  Operating System :: OS Independent
{%- if cookiecutter.use_django =='y' %}
  Framework :: Django :: 2.0
  Framework :: Django :: 2.1
  Framework :: Django :: 2.2
  Framework :: Django :: 3.0
{%- endif %}
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3 :: Only
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Topic :: Software Development :: Libraries :: Python Modules

[bdist_wheel]
universal = 1

[options]
zip_safe = false
python_requires = >= 3.6
{%- if cookiecutter.use_django =='y' %}
install_requires =
  Django>=2.0
{%- endif %}
packages = find:

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 90
known_future_library = annotations
known_standard_library = collections, dataclasses, functools, numbers, typing
known_third_party = numpy, scipy, mpmath, pytest

[flake8]
max-line-length = 90
max-complexity = 10
exclude =
  .git
  .tox
  .eggs
  .idea
  .venv
  __init__.py
  __pycache__
  migrations
  build/
  dist/
  tests/

ignore =
  # Line too long
  E501,
  # Continuation line under-indented for visual indent
  E128,
  # Line break after binary operator
  W504

{% if cookiecutter.use_coverage == 'y' -%}
[coverage:run]
source = {{ cookiecutter.project_dir }}
omit = tests/*
{%- endif %}
