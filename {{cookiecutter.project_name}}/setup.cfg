{%- set stage_classifiers = {
    'Alpha': 'Development Status :: 3 - Alpha',
    'Beta': 'Development Status :: 4 - Beta',
    'Production': 'Development Status :: 5 - Production/Stable',
} -%}

{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}

[metadata]
name = {{ cookiecutter.project_name }}
version = attr: {{ cookiecutter.project_dir }}.__version__
description = {{ cookiecutter.project_short_description }}
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name }}
license = {{ cookiecutter.open_source_license }}
author = {{ cookiecutter.full_name }}
author_email = {{ cookiecutter.email }}
maintainer = {{ cookiecutter.full_name }}
maintainer_email = {{ cookiecutter.email }}
platforms = OS Independent
classifiers =
  Intended Audience :: Developers
{%- if cookiecutter.stage in stage_classifiers %}
  {{ stage_classifiers[cookiecutter.stage] }}
{%- endif %}
{%- if cookiecutter.open_source_license in license_classifiers %}
  {{ license_classifiers[cookiecutter.open_source_license] }}
{%- endif %}
  Operating System :: OS Independent
{%- if cookiecutter.use_django == 'y' %}
  Framework :: Django :: 2.2
  Framework :: Django :: 3.0
  Framework :: Django :: 3.1
  Framework :: Django :: 3.2
  Framework :: Django :: 4.0
{%- endif %}
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3 :: Only
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Topic :: Software Development :: Libraries :: Python Modules

[bdist_wheel]
universal = 1

[options]
zip_safe = false
python_requires = >= 3.8
include_package_data = true
{%- if cookiecutter.use_django == 'y' %}
install_requires =
  Django>=2.2
{%- else %}
; install_requires =
{%- endif %}
packages = find_namespace:

[options.packages.find]
exclude =
  tests
  tests.*

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 90
known_first_party = app

[flake8]
max-line-length = 90
max-complexity = 10
exclude =
{%- if cookiecutter.use_django == 'y' %}
  migrations/
{%- endif %}
  tests/
per-file-ignores =
  # imported but unused
  __init__.py: F401
  apps.py: F401
ignore =
  # Line too long
  E501
  # Continuation line under-indented for visual indent
  E128
  # Line break after binary operator
  W503
  W504
  # Function is too complex
  C901

[mypy]
files = {{ cookiecutter.project_dir }}
strict_optional = False
check_untyped_defs = True
allow_redefinition = True
pretty = True

{% if cookiecutter.use_coverage == 'y' -%}
[coverage:run]
source = {{ cookiecutter.project_dir }}
omit =
  *migrations*
  *tests*
{%- endif %}
